# 1. Original node classification
------------------------------------------------------------
python training_main.py --dataset Cora --model GCN2 --epochs 300 --lr 0.01 --run_mode original --note basic_node_cls --use_original_label true
python training_main.py --dataset CiteSeer --model GCN2 --epochs 300 --lr 0.01 --run_mode original --note basic_node_cls --use_original_label true
python training_main.py --dataset KarateClub --model GCN2 --epochs 300 --lr 0.01 --run_mode original --note basic_node_cls --use_original_label true
python training_main.py --dataset Amazon --model GCN2 --epochs 300 --lr 0.01 --run_mode original --note basic_node_cls --use_original_label true
python training_main.py --dataset Airport --model GCN2 --epochs 300 --lr 0.01 --run_mode original --note basic_node_cls --use_original_label true


# 2. Train GNN model (node classification) after random subgraph selection
------------------------------------------------------------
python train_remaining_main.py --dataset Cora --model GCN2 --epochs 300 --lr 0.01 --run_mode baselineResult --note basic_node_cls --selector_type random --fraction 0.1
python train_remaining_main.py --dataset CiteSeer --model GCN2 --epochs 300 --lr 0.01 --run_mode baselineResult --note basic_node_cls --selector_type random --fraction 0.1
python train_remaining_main.py --dataset KarateClub --model GCN2 --epochs 300 --lr 0.01 --run_mode baselineResult --note basic_node_cls --selector_type random --fraction 0.1
python train_remaining_main.py --dataset Amazon --model GCN2 --epochs 300 --lr 0.01 --run_mode baselineResult --note basic_node_cls --selector_type random --fraction 0.1
python train_remaining_main.py --dataset Airport --model GCN2 --epochs 300 --lr 0.01 --run_mode baselineResult --note basic_node_cls --selector_type random --fraction 0.1


# 3. using SVD for for feature selection and Train base GNN model (node classification) for explainer (multi features for y) 
------------------------------------------------------------
python training_main.py --dataset Cora --model GCN2 --epochs 300 --lr 0.01 --run_mode stage1 --note basic_node_cls --use_original_label false --feature_selection_method svd --top_n 10
python training_main.py --dataset CiteSeer --model GCN2 --epochs 300 --lr 0.01 --run_mode stage1 --note basic_node_cls --use_original_label false --feature_selection_method svd --top_n 10
python training_main.py --dataset KarateClub --model GCN2 --epochs 300 --lr 0.01 --run_mode stage1 --note basic_node_cls --use_original_label false --feature_selection_method svd --top_n 10
python training_main.py --dataset Amazon --model GCN2 --epochs 300 --lr 0.01 --run_mode stage1 --note basic_node_cls --use_original_label false --feature_selection_method svd --top_n 10
python training_main.py --dataset Airport --model GCN2 --epochs 300 --lr 0.01 --run_mode stage1 --note basic_node_cls --use_original_label false --feature_selection_method svd --top_n 10


# 4. Generate GNNExplainer explainable subgraph from random nodes (base on node classification model from #3)
------------------------------------------------------------
python stage2_expsubg.py --dataset Cora  --choose_nodes random --node_ratio auto --edge_ratio 0.5
python stage2_expsubg.py --dataset CiteSeer  --choose_nodes random --node_ratio auto --edge_ratio 0.5
python stage2_expsubg.py --dataset KarateClub  --choose_nodes random --node_ratio auto --edge_ratio 0.5
python stage2_expsubg.py --dataset Amazon  --choose_nodes random --node_ratio auto --edge_ratio 0.5
python stage2_expsubg.py --dataset Airport  --choose_nodes random --node_ratio auto --edge_ratio 0.5


# 5.
